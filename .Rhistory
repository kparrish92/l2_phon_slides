options(htmltools.dir.version = FALSE)
knitr::include_graphics(here("images", "phon_sp.png"))
knitr::include_graphics(here("images", "phon_sp.png"))
knitr::include_graphics(here("week1", "images", "phon_sp.png"))
knitr::include_graphics(here("week1", "images", "phon_sp.png"))
knitr::include_graphics(here::here("week1", "images", "phon_sp.png"))
options(htmltools.dir.version = FALSE, echo = FALSE, message = FALSE)
knitr::include_graphics(here::here("week1", "images", "praat_ex.png"))
knitr::include_graphics(here::here("week1", "images", "ac.png"))
remotes::install_github("jhelvy/xaringanBuilder")
library(xaringanBuilder)
library(xaringanBuilder)
2
1
remotes::install_github("jhelvy/xaringanBuilder")
TRUE
build_pdf("index.html")
renderthis::build_pdf(index.html)
to_pdf(index.html)
renderthis::to_pdf(index.html)
remotes::install_github('rstudio/chromote')
rep(c(1:5), times = 3)
rep(c(1:5), times = 3)
rep(c("i", "u", "y"), times = 3)
rep = rep(c(1:5), times = 3)
vowel = rep(c("i", "u", "y"), times = 3)
rep = rep(c(1:5), times = 3)
vowel = rep(c("i", "u", "y"), times = 3)
data.frame(rep, vowel)
ization task
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel = rep(c("i", "u", "y"), times = 3)
data.frame(rep, vowel)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel = rep(c("i", "u", "y"), times = 5)
data.frame(rep, vowel)
dfs = data.frame(rep, vowel)
View(dfs)
vowel_chosen = rbinom(n = 1, size = 1, prob = .5)
rbinom(n = 1, size = 1, prob = .5)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
dfs = data.frame(rep, vowel)
dfs$vowel_chosen_no = rbinom(n = 1, size = 1, prob = .5) # probabliy of i
View(dfs)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
dfs = data.frame(rep, vowel)
dfs$vowel_chosen_no = rbinom(n = 1, size = 15, prob = .5) # probabliy of i
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
dfs = data.frame(rep, vowel)
dfs$vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
View(dfs)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = mutate(ifelse, vowel_chosen_no == 1, "i", "u"))
library(tidyverse)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = mutate(ifelse, vowel_chosen_no == 1, "i", "u"))
library(tidyverse)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = ifelse, vowel_chosen_no == 1, "i", "u"))
library(tidyverse)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = ifelse, vowel_chosen_no == 1, "i", "u"))
library(tidyverse)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = ifelse(vowel_chosen_no == 1, "i", "u"))
library(tidyverse)
# Sim original categorization task
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = ifelse(vowel_chosen_no == 1, "i", "u"))
library(tidyverse)
# Sim original categorization task
i = 1
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = ifelse(vowel_chosen_no == 1, "i", "u")) %>%
mutate(ppt = i)
View(dfs)
library(tidyverse)
# Sim original categorization task
i = 1
rep = rep(c(1:5), times = 3)
vowel_played = rep(c("i", "u", "y"), times = 5)
vowel_chosen_no = rbinom(n = 15, size = 1, prob = .5) # probabliy of i
dfs = data.frame(rep, vowel, vowel_chosen_no) %>%
mutate(vowel_chosen = ifelse(vowel_chosen_no == 1, "i", "u")) %>%
mutate(ppt = i)
View(dfs)
View(dfs)
View(dfs)
Ejemplo: Tenemos tokens de hablantes A, B y C.
